{"version":3,"sources":["api.js","Repote.js","useForm.js","App.js","reportWebVitals.js","index.js"],"names":["URL","getData","a","url","params","id","string_params","length","param","key","value","urlComplete","encodeURI","fetch","resp","json","data","postData","requestOptions","method","headers","body","JSON","stringify","getCursosByCode","props","res","Reporte","initialState","useState","values","setValues","target","name","useForm","periodo","handleInputChange","cursos","state","setstate","update","then","console","log","message","catch","err","useEffect","renderCursos","map","curso","query","_id","codigo_curso","titular","codigo_titular","codigo_periodo","centro","codigo_centro","className","style","onClick","reporte","create","window","alert","open","hadledPDF","classNamme","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.657db775.chunk.js","sourcesContent":["let URL = 'https://cemasapi.herokuapp.com';\n\n\nconst getData = async ({ url, params, id }) => {\n\n    let urlAPI = URL;\n    let string_params = '';\n\n    if (params.length === 1) {\n\n        for (let param of params) {\n\n            string_params += `/${param.key}/${param.value}`;\n\n        }\n\n    } else if (id) {\n        string_params += `/${id}`;\n    }\n\n\n\n    const urlComplete = `${urlAPI}${url}${encodeURI(string_params)}`;\n    const resp = await fetch(urlComplete);\n    const { data } = await resp.json();\n\n\n\n\n    return data;\n};\n\nconst postData = async (url, data) => {\n    let urlAPI = URL;\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    };\n\n    return await fetch(`${urlAPI}${url}`, requestOptions);\n};\n\n\n\nconst getCursosByCode = async (props) => {\n\n    let res = await getData({\n        url: '/curso',\n        params: props\n    });\n\n\n\n    return res;\n};\n\n\nexport {\n    URL,\n    postData,\n    getData,\n    getCursosByCode\n};","import React, { useState, useEffect } from 'react'\nimport { postData, getCursosByCode, URL } from './api';\nimport { useForm } from './useForm';\n\nfunction Reporte(props) {\n\n    const initialState = {\n        cursos: [],\n    };\n\n    const [values, handleInputChange] = useForm({ periodo: '' });\n    const { periodo } = values;\n\n    const [state, setstate] = useState(initialState)\n\n    const update = () => {\n        getCursosByCode([{\n            key: 'codigo_periodo',\n            value: periodo\n        }]).then(data => setstate(\n            state => {\n\n                console.log(state.periodo, data);\n                return ({\n                    ...state,\n                    message: `${data?.length} Curso${data?.length < 2 ? '' : 's'} obtenido${data?.length < 2 ? '' : 's'} de  BD.`,\n                    cursos: data\n                })\n\n\n            })).catch((err) => setstate(state => {\n                return ({\n                    ...state,\n                    cursos: [],\n                    message: 'Revisar el internet!',\n                })\n            }))\n\n    }\n\n\n\n    useEffect(() => {\n\n        //cargar lista de cursos creados por el usuario\n        console.log('Cargar todos los cursos creados por el usuario');\n        update();\n\n\n    }, [])\n\n\n\n\n\n    const hadledUpdate = (reporte) => {\n\n        console.log('UPDATE REPORTES')\n\n        postData('/reportes/create', reporte)\n            .then((res) => { return res.json() })\n            .then((data) => {\n\n                console.log('Reportes', data);\n                if (data.create) {\n                    setstate({\n                        ...state,\n                        message: `Los reportes de ${reporte.curso} fueron actualizados!`,\n\n                    })\n                    window.alert('Actualizacion completada!')\n                } else {\n                    setstate({\n                        ...state,\n                        message: `No existen boletines para ${reporte.curso}!`,\n\n                    })\n                }\n\n            })\n    }\n\n\n\n    const hadledPDF = (reporte) => {\n\n        const urlComplete = `${URL}${'/reporte/pdf'}/${reporte._id}`;\n        console.log('GET PDF', urlComplete)\n\n        window.open(urlComplete)\n\n    }\n\n\n    const renderCursos = state.cursos?.map((curso) => {\n\n\n        const query = {\n            _id: curso._id,\n            curso: curso.codigo_curso,\n            titular: curso.codigo_titular,\n            periodo: curso.codigo_periodo,\n            centro: curso.codigo_centro\n\n        }\n\n\n        return (\n\n\n            < div key={curso._id} className=\"card border-dark mb-3 mt-3 ml-3 mr-3\" style={{ \"width\": \"18rem\" }\n            }>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Reporte</h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\"> {`${curso.codigo_curso}`}</h6>\n                    <p className=\"card-text\"> Periodo Educativo: {curso.codigo_periodo}</p>\n                    <button\n                        onClick={() => hadledUpdate(query)}\n                        className=\"btn btn-outline-danger mr-1\"\n                    >Actualizar</button>\n                    <button\n                        onClick={() => hadledPDF(query)}\n                        className=\"btn btn-outline-success ml-1\"\n                    >PDF</button>\n                </div>\n            </div >\n        );\n    });\n\n\n    return (\n        <div className=\"container mt-3 mb-5\" >\n\n            <div classNamme=\"col\">\n\n                <div className=\"row mt-3 form-group\">\n                    <h1>Reportes: </h1>\n                    <div className=\"input-group mt-3 mb-3\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name='periodo'\n                            placeholder=\"Buscar por peridodo, ejem: 2020-2021\"\n                            value={periodo}\n                            onChange={handleInputChange}\n                        />\n                        <div className=\"input-group-append\">\n                            <button\n                                className=\"btn btn-outline-primary\"\n                                type=\"button\"\n                                onClick={update}\n                            >\n                                Buscar\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n\n\n\n                <div className=\"row justify-content-center\">\n\n                        {renderCursos}\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Reporte;","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import Reporte from './Repote';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Reporte />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}